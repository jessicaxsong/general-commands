# update ubuntu
sudo apt update

sudo apt -y upgrade


# install R
sudo apt-get install r-base r-base-dev

# install R-studio
sudo apt-get install gdebi-core

wget https://download1.rstudio.org/rstudio-0.99.896-amd64.deb

sudo dpkg -i rstudio-1.0.124-amd64.deb  # identify missing packages, if any (here it was: Package libgstreamer-plugins-base0.10-0 is not installed) 

wget http://ftp.ca.debian.org/debian/pool/main/g/gstreamer0.10/libgstreamer0.10-0_0.10.36-1.5_amd64.deb

wget http://ftp.ca.debian.org/debian/pool/main/g/gst-plugins-base0.10/libgstreamer-plugins-base0.10-0_0.10.36-2_amd64.deb

sudo dpkg -i libgstreamer0.10-0_0.10.36-1.5_amd64.deb 

sudo dpkg -i libgstreamer-plugins-base0.10-0_0.10.36-2_amd64.deb

sudo apt-mark hold libgstreamer-plugins-base0.10-0  # Make sure they don't get over-written at the next software update

sudo apt-mark hold libgstreamer0.10

sudo gdebi rstudio-1.3.1093-amd64.deb # install R

rstudio # run 

# update R (from RGUI)
# installing/loading the package:
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr

updateR() # this will start the updating process of your R installation

# run processes in background via shell 
command & # ampersand to prevent terminating process upon shell exit

# check active processes 
jobs

# check running processes
ps

# check real-time processes 
top

# copy files remotely from server to another
# from local terminal
scp user@remote_server:/filepath/file.txt localpath/copied-file.txt # remote server to local one (do not do so through ssh)
scp file.txt user@remote_server:/filepath/copied-file.txt # local server to remote one
